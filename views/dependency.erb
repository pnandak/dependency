<!DOCTYPE html>
<meta charset="utf-8">
<title>Enron Network Dependency</title>
<style>

@import url(./style.css?20120427);

#circle circle {
  fill: none;
  pointer-events: all;
}

.group path {
  fill-opacity: .5;
}

path.chord {
  stroke: #000;
  stroke-width: .25px;
}

#circle:hover path.fade {
  display: none;
}


body {
  position: relative;
  font-family: "Times", Helvetica, sans-serif;
  margin: 1em auto 4em auto;
  width: 960px;
}

h1 {
  font-size: 64px;
  font-weight: 300;
  letter-spacing: -2px;
  margin: .3em 0 .1em 0;
}


h2 {
  margin-top: 2em;
}

h2 a {
  color: #ccc;
  left: -20px;
  position: absolute;
  width: 740px;
}

footer {
  font-size: small;
  margin-top: 8em;
}

header aside {
  margin-top: 82px;
}

header aside,
footer aside {
  color: #636363;
  text-align: right;
}

aside {
  font-size: small;
  left: 780px;
  position: absolute;
  width: 180px;
  padding-top: 100px;
}

.attribution {
  font-size: small;
  margin-bottom: 2em;
}

body > p, li > p {
  line-height: 1.5em;
}

body > p {
  width: 720px;
}

body > blockquote {
  width: 640px;
}

li {
  width: 680px;
}

a {
  color: steelblue;
}

a:not(:hover) {
  text-decoration: none;
}

pre, code, textarea {
  font-family: "Menlo", monospace;
}

code {
  line-height: 1em;
}

textarea {
  font-size: 100%;
}

body > pre {
  border-left: solid 2px #ccc;
  padding-left: 18px;
  margin: 2em 0 2em -20px;
}

.html .value,
.javascript .string,
.javascript .regexp {
  color: #756bb1;
}

.html .tag,
.css .tag,
.javascript .keyword {
  color: #3182bd;
}

.comment {
  color: #636363;
}

.html .doctype,
.javascript .number {
  color: #31a354;
}

.html .attribute,
.css .attribute,
.javascript .class,
.javascript .special {
  color: #e6550d;
}

svg {
  font: 10px sans-serif;
}

.axis path, .axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

sup, sub {
  line-height: 0;
}

q:before,
blockquote:before {
  content: "“";
}

q:after,
blockquote:after {
  content: "”";
}

blockquote:before {
  position: absolute;
  left: 2em;
}

blockquote:after {
  position: absolute;
}


</style>

<h2>Enron Email Corpus - by Department</h2>



</aside>

<script src="http://d3js.org/d3.v2.min.js?2.8.1"></script>
<hr> 
<div style="padding-bottom:45px;"></div>
<script>

var width = 920,
    height = 1020,
    outerRadius = Math.min(width, height) / 2 -78,
    innerRadius = outerRadius - 35;

var arc = d3.svg.arc()
    .innerRadius(innerRadius)
    .outerRadius(outerRadius);

var layout = d3.layout.chord()
    .padding(.04)
    .sortSubgroups(d3.descending)
    .sortChords(d3.ascending);

var path = d3.svg.chord()
    .radius(innerRadius);

var svg = d3.select("body").append("svg")
    .attr("width", width+150)
    .attr("height", height+190)
   .append("g")
    .attr("id", "circle")
    .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

svg.append("circle")
    .attr("r", outerRadius);

//load ze data
// peoples.csv has three columns - name, centrality score, and color. Same colors indicate same department
//matrix is the adjacency matrix w/o column or row names
d3.csv("peoples.csv", function(peoples) {
  d3.json("matrix.json", function(matrix) {

    // Compute the chord layout.
    layout.matrix(matrix); //whoo d3

    // Add a group per neighborhood.
    var group = svg.selectAll(".group")
        .data(layout.groups)
        .enter().append("g")
        .attr("class", "group")
        .on("mouseover", mouseover);

    
    group.append("title")
      .text(function(d, i) {
      return peoples[i].name + " : " + Math.round(((d.value))) + " emailss sent";
    });

   group.append("svg:text")
        .attr("xlink:href", function (d) {
            return "#group" + d.index;
        })
        .attr("dy", ".35em")
        .attr("color", "#fff")
        .text(function (d) {
            return peoples[d.index].name;
        });

    //position group labels to match layout
    group.select("text")
        .transition()
            .duration(1500)
            .attr("transform", function(d) {
                d.angle = (d.startAngle + d.endAngle) / 2;
                //store the midpoint angle in the data object
                
                return "rotate(" + (d.angle * 180 / Math.PI - 90) + ")" +
                    " translate(" + (innerRadius + 26) + ")" + 
                    (d.angle > Math.PI ? " rotate(180)" : " rotate(0)"); 
                //include the rotate zero so that transforms can be interpolated
            })
            .attr("text-anchor", function (d) {
                return d.angle > Math.PI ? "end" : "begin";
            });
    


    // arc 
    var groupPath = group.append("path")
        .attr("id", function(d, i) { return "group" + i; })
        .attr("d", arc)
        .style("fill", function(d, i) { return peoples[i].color; });

    // text label
 /*   var groupText = group.append("text")
        .attr("x", 6)
        .attr("dy", 15);

    groupText.append("textPath")
        .attr("xlink:href", function(d, i) { return "#group" + i; })
        .text(function(d, i) { return "   " + peoples[i].name; });


    // Remove the labels that don't fit. :(
        groupText.filter(function(d, i) { return groupPath[0][i].getTotalLength() / 2 - 16 < this.getComputedTextLength(); })
        .remove(); */
 
    // Add the chords.
    var chord = svg.selectAll(".chord")
        .data(layout.chords)
        .enter().append("path")
        .attr("class", "chord")
        .style("fill", function(d) { return peoples[d.source.index].color; })
        .attr("d", path);

    chord.append("title")
    .text(function(d) {
      //.style("fill", function(d) {return #FFFFFF; })
      //.attr("transform", function(d) { return d.angle > Math.PI ? "rotate(180)translate(-16)" : null; })
      return peoples[d.source.index].name
          + " sent " + Math.round((d.source.value))
          + " emails to " + peoples[d.target.index].name
          + "\n" + peoples[d.target.index].name
          + " sent " + Math.round((d.target.value)) 
          + " emails to " + peoples[d.source.index].name;
    });



    function mouseover(d, i) {
      chord.classed("fade", function(p) {
        return p.source.index != i
            && p.target.index != i;
      });
    } 
  });
});

</script>



<footer>
  <h3>Cinco de Mayo! 2014</h3>
  <h5 style="color: #336666;">Daniel Metz, Emily Proulx, David Khatami and Tim Kaye. </h5>
</footer>
